{"version":3,"sources":["constants/userConstants.js","constants/adminConstants.js","components/Header.js","actions/userActions.js","components/ChatMessage.js","components/Conversation.js","screens/MessageScreen.js","components/SearchBox.js","screens/UsersScreen.js","components/FormContainer.js","components/Loader.js","components/Message.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/UserScreen.js","screens/UserProfileScreen.js","screens/AdminUsersScreen.js","actions/adminActions.js","screens/BlogSectionScreen.js","App.js","reportWebVitals.js","store.js","reducers/userReducers.js","reducers/adminReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_DELETE_PROFILE_REQUEST","USER_DELETE_PROFILE_SUCCESS","USER_DELETE_PROFILE_FAIL","ADMIN_USER_LIST_REQUEST","ADMIN_USER_LIST_SUCCESS","ADMIN_USER_LIST_FAIL","ADMIN_USER_LIST_RESET","ADMIN_USER_DELETE_REQUEST","ADMIN_USER_DELETE_SUCCESS","ADMIN_USER_DELETE_FAIL","Header","dispatch","useDispatch","userInfo","useSelector","state","userLogin","Navbar","bg","variant","expand","Container","Row","style","display","alignItems","Col","sm","to","Brand","Toggle","Collapse","id","Nav","className","Link","isLearning","NavDropdown","title","knownAs","charAt","toUpperCase","slice","Item","Divider","onClick","localStorage","removeItem","type","isAdmin","ChatMessage","chatMessage","own","Card","Body","Title","contents","Footer","format","date","_id","Conversation","conversation","useState","friend","setFriend","useEffect","participants","find","m","fetchUsers","a","axios","res","data","margin","username","MessageScreen","history","conversations","setConversations","currentConversation","setCurrentConversation","messages","setMessages","newMessage","setNewMessage","arrivedMessage","setArrivedMessage","socket","useRef","scrollRef","config","headers","Authorization","token","current","io","on","sender","Date","now","push","includes","prev","emit","users","console","log","fetchConversations","get","fetchMessages","scrollIntoView","behavior","submitHandler","e","preventDefault","message","conversationId","reciever","post","md","border","borderRadius","map","c","ref","justifyContent","width","Form","Control","onChange","target","value","as","placeholder","Button","icon","faPaperPlane","fontSize","SearchBox","keyword","setKeyword","onSubmit","trim","name","faSearch","UsersScreen","match","setUsers","params","render","juctifyContent","flexWrap","user","marginBottom","faUser","Text","gender","city","country","marginTop","nativeLanguage","introduction","FormContainer","children","xs","Loader","Spinner","animation","role","height","Message","Alert","defaultProps","LoginScreen","location","setUsername","password","setPassword","loading","error","redirect","search","split","payload","setItem","JSON","stringify","response","login","Group","controlId","Label","RegisterScreen","confirmPassword","setConfirmPassword","setMessage","setKnownAs","languages","setLanguage","dateOfBirth","setDateOfBirth","setGender","countries","setCountry","cities","setCity","setIntroduction","selectedNativeLanguage","setSelectedNativeLanguage","selectedIsLearning","setSelectedIsLearning","selectedCountry","setSelectedCountry","selectedCity","setSelectedCity","age","setAge","userRegister","fetchLanguages","fetchCountries","calculateAge","Bday","calculatedAge","register","language","languageName","selected","disabled","hidden","fetchCities","countryName","cityName","UserScreen","userDetails","success","userUpdateProfile","successDelete","userDeleteProfile","getState","put","updateUserProfile","window","confirm","delete","deleteUserAccount","UserProfileScreen","setUser","fetchUser","flag","length","conv","padding","Math","floor","AdminUsersScreen","adminUserList","adminUserDelete","deleteHandler","adminUsersDelete","BlogSectionScreen","posts","setPosts","setTitle","setContents","sectionId","setSectionId","fetchPosts","userId","reload","dispay","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.91d37958.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\n\nexport const USER_DELETE_PROFILE_REQUEST = 'USER_DELETE_PROFILE_REQUEST'\nexport const USER_DELETE_PROFILE_SUCCESS = 'USER_DELETE_PROFILE_SUCCESS'\nexport const USER_DELETE_PROFILE_FAIL = 'USER_DELETE_PROFILE_FAIL'","export const ADMIN_USER_LIST_REQUEST = 'ADMIN_USER_LIST_REQUEST'\nexport const ADMIN_USER_LIST_SUCCESS = 'ADMIN_USER_LIST_SUCCESS'\nexport const ADMIN_USER_LIST_FAIL = 'ADMIN_USER_LIST_FAIL'\nexport const ADMIN_USER_LIST_RESET = 'ADMIN_USER_LIST_RESET'\n\nexport const ADMIN_USER_DELETE_REQUEST = 'ADMIN_USER_DELETE_REQUEST'\nexport const ADMIN_USER_DELETE_SUCCESS = 'ADMIN_USER_DELETE_SUCCESS'\nexport const ADMIN_USER_DELETE_FAIL = 'ADMIN_USER_DELETE_FAIL'","import React from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Container, Nav, NavDropdown, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../actions/userActions';\n\nconst Header = () => {\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin);\n\n    const { userInfo } = userLogin;\n\n    const logoutHandler = () => {\n        dispatch(logout());\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n                <Container>\n                    <Row style={{ display: 'flex', alignItems: 'center' }}>\n                        <Col sm={5}>\n                            <LinkContainer to=\"/\"><Navbar.Brand>Polylingua</Navbar.Brand></LinkContainer>\n                        </Col>\n                        <Col sm={5}>\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                            <Navbar.Collapse id=\"basic-navbar-nav\">\n                                {userInfo ? (\n                                    <Nav className=\"me-auto\">\n                                        <LinkContainer to=\"/\">\n                                            <Nav.Link>Friends</Nav.Link>\n                                        </LinkContainer>\n                                        <LinkContainer to=\"/messages\">\n                                            <Nav.Link>Messages</Nav.Link>\n                                        </LinkContainer>\n                                        <LinkContainer to={`/blogs/${userInfo.isLearning}`}>\n                                            <Nav.Link>Blog</Nav.Link>\n                                        </LinkContainer>\n                                    </Nav>\n                                ) : (<>\n                                </>)}\n                            </Navbar.Collapse>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={2}>\n                            <Nav>\n                                {userInfo ? (\n                                    <NavDropdown title={\"Hello, \" + userInfo.knownAs.charAt(0).toUpperCase() + userInfo.knownAs.slice(1)} id='name'>\n                                        <LinkContainer to=\"/users/profile\"><NavDropdown.Item>Profile</NavDropdown.Item></LinkContainer>\n                                        <NavDropdown.Divider />\n                                        <LinkContainer to=\"/profile/edit\"><NavDropdown.Item>Edit profile</NavDropdown.Item></LinkContainer>\n                                        <NavDropdown.Divider />\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                                    </NavDropdown>\n                                ) : (<LinkContainer to=\"/login\">\n                                    <Nav.Link>Login</Nav.Link>\n                                </LinkContainer>)\n                                }\n                                {userInfo && userInfo.isAdmin && (\n                                    <NavDropdown title={\"Admin \"} id='adminmenu'>\n                                        <LinkContainer to=\"/admin/users\"><NavDropdown.Item>Users</NavDropdown.Item></LinkContainer>\n                                    </NavDropdown>\n                                )}\n                            </Nav>\n                        </Col>\n                    </Row>\n                </Container>\n            </Navbar>\n        </header >\n    )\n}\n\nexport default Header\n","import axios from \"axios\"\nimport {\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_DELETE_PROFILE_REQUEST,\n    USER_DELETE_PROFILE_SUCCESS,\n    USER_DELETE_PROFILE_FAIL,\n} from \"../constants/userConstants\"\n\nimport {\n    ADMIN_USER_LIST_RESET\n} from \"../constants/adminConstants\"\n\nexport const login = (username, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users/login', { username, password }, config);\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo');\n    dispatch({ type: USER_LOGOUT });\n    dispatch({ type: ADMIN_USER_LIST_RESET });\n}\n\nexport const register = (username, password, knownAs, nativeLanguage, isLearning, dateOfBirth, gender, country, city, introduction) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users', { username, password, knownAs, nativeLanguage, isLearning, dateOfBirth, gender, country, city, introduction }, config);\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/users/users/${id}`, config);\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/users/users/profile`, user, config);\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const deleteUserAccount = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_PROFILE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        localStorage.removeItem('userInfo');\n\n        dispatch({\n            type: USER_LOGOUT,\n        })\n\n        await axios.delete(`/api/users/users/${user}`, config);\n\n        dispatch({\n            type: USER_DELETE_PROFILE_SUCCESS,\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { format } from 'timeago.js'\n\nconst ChatMessage = ({ chatMessage, own }) => {\n    return (\n        <Card className={own ? \"chatMessageOwn\" : \"chatMessage\"} key={chatMessage._id}>\n            <Card.Body>\n                <Card.Title>{chatMessage.contents}</Card.Title>\n                <Card.Footer>{format(chatMessage.date)}</Card.Footer>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default ChatMessage","import React, { useEffect, useState } from 'react'\nimport { Card } from 'react-bootstrap'\nimport { useSelector } from \"react-redux\";\nimport axios from 'axios';\n\nconst Conversation = ({ conversation }) => {\n    const [friend, setFriend] = useState([]);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        const friend = conversation.participants.find((m) => m !== userInfo._id)\n\n        const fetchUsers = async (friend) => {\n            const res = await axios(`/api/users/users/${friend}`);\n            setFriend(res.data)\n        }\n        fetchUsers(friend)\n\n    }, [userInfo, conversation])\n\n    return (\n        <Card style={{margin: \"2% 0 2% 0\"}}>\n            <Card.Body>\n                <Card.Title>{friend.username}</Card.Title>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Conversation\n","import React, { useEffect, useState, useRef } from 'react'\nimport { Row, Col, Card, Container, Form, Button } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport ChatMessage from '../components/ChatMessage';\nimport { io } from 'socket.io-client'\nimport Conversation from '../components/Conversation';\n\nconst MessageScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const [conversations, setConversations] = useState([]);\n\n    const [currentConversation, setCurrentConversation] = useState(null);\n\n    const [messages, setMessages] = useState([]);\n\n    const [newMessage, setNewMessage] = useState('');\n    const [arrivedMessage, setArrivedMessage] = useState(null);\n\n    const socket = useRef();\n\n    const scrollRef = useRef();\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const config = {\n        headers: {\n            Authorization: `Bearer ${userInfo.token}`\n        }\n    }\n\n    useEffect(() => {\n        if (userInfo) {\n            socket.current = io(\"https://polylingua-app.herokuapp.com\"); //change it\n            socket.current.on(\"getMessage\", data => {\n                setArrivedMessage({\n                    sender: data.sender,\n                    contents: data.contents,\n                    date: Date.now(),\n                })\n            })\n        } else {\n            history.push('/login');\n        }\n    }, [userInfo, history])\n\n    useEffect(() => {\n        arrivedMessage && currentConversation?.participants.includes(arrivedMessage.sender) &&\n            setMessages(prev => [...prev, arrivedMessage])\n\n    }, [arrivedMessage, currentConversation])\n\n    useEffect(() => {\n        if (userInfo) {\n            socket.current.emit(\"addUser\", userInfo._id);\n            socket.current.on(\"getUsers\", users => {\n                console.log(users);\n            });\n        } else {\n            history.push('/login');\n        }\n    }, [userInfo, history])\n\n    useEffect(() => {\n        if (userInfo) {\n\n            const fetchConversations = async (id) => {\n                try {\n                    const res = await axios.get(`/api/conversations/${id}`, config)\n                    console.log(res.data);\n                    setConversations(res.data)\n                } catch (error) {\n                    console.log(error);\n                }\n            }\n            fetchConversations(userInfo._id);\n        } else {\n            history.push('/login');\n        }\n    }, [userInfo, history])\n\n    useEffect(() => {\n        if (userInfo) {\n            const fetchMessages = async (id) => {\n                const { data } = await axios.get(`/api/messages/${id}`, config)\n                setMessages(data)\n            }\n            fetchMessages(currentConversation?._id);\n        } else {\n            history.push('/login');\n        }\n    }, [dispatch, history, userInfo, currentConversation])\n\n    useEffect(() => {\n        if (userInfo) {\n            scrollRef.current?.scrollIntoView({ behavior: \"auto\" })\n        } else {\n            history.push('/login');\n        }\n    }, [dispatch, history, userInfo, messages])\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n\n        const message = {\n            sender: userInfo._id,\n            contents: newMessage,\n            conversationId: currentConversation._id,\n        }\n        console.log(message);\n\n        const reciever = currentConversation.participants.find(m => m !== userInfo._id)\n\n        socket.current.emit(\"sendMessage\", {\n            sender: userInfo._id,\n            reciever,\n            contents: newMessage\n        })\n\n        const res = await axios.post('/api/messages', message, config)\n        setMessages([...messages, res.data])\n    }\n\n    return (\n        <>\n            <Container>\n                <Card>\n                    <Card.Body>\n                        <Row>\n                            <Col md={4} style={{ border: \"solid #593196 3px\", borderRadius: \"2%\", margin: \"1%\" }}>\n                                {\n                                    conversations.map((c) => (\n                                        <div onClick={() => {\n                                            setCurrentConversation(c);\n                                        }}><Conversation conversation={c} />\n                                        </div>\n                                    ))\n                                }\n\n                            </Col>\n                            <Col>\n                                {currentConversation ? (\n                                    <Col>\n                                        <Col className=\"chatBox\">\n\n                                            <Col md={8} className=\"chatBoxWrapper\">\n                                                {\n                                                    messages.map((message) => (\n                                                        <div ref={scrollRef}>\n                                                            <ChatMessage chatMessage={message} own={message.sender === userInfo._id} conversation={currentConversation} />\n                                                        </div>\n                                                    ))\n                                                }\n\n                                            </Col>\n\n                                        </Col>\n                                        <Col style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"100%\" }}>\n                                            <Form.Control onChange={(e) => setNewMessage(e.target.value)} value={newMessage} className=\"mx-2\" as=\"textarea\" placeholder=\"Write a message here\" />\n                                            <Button onClick={submitHandler} type=\"submit\" variant=\"primary\"><FontAwesomeIcon className=\"mx-2\" icon={faPaperPlane}></FontAwesomeIcon></Button>\n                                        </Col>\n                                    </Col>\n                                ) : (\n                                    <p style={{ fontSize: \"25px\" }}>Choose a conversation to chat!</p>\n                                )}\n                            </Col>\n\n                        </Row>\n                    </Card.Body>\n                </Card>\n            </Container>\n        </>\n    )\n}\n\nexport default MessageScreen\n","import { useState } from \"react\"\nimport { Form, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nconst SearchBox = ({ history }) => {\n    const [keyword, setKeyword] = useState('');\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (keyword.trim()) {\n            history.push(`/search/${keyword}`);\n        } else {\n            history.push('/')\n        }\n    }\n\n    return (\n        <Form onSubmit={submitHandler} style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} className=\"my-5\">\n            <Form.Control type='text' name='q' onChange={(e) => setKeyword(e.target.value)} placeholder=\"Find a user by name, username, language user's learning, country or a city\" />\n            <Button type='submit' variant=\"primary\"><FontAwesomeIcon className=\"mx-2\" icon={faSearch}></FontAwesomeIcon></Button>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Card, Button, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useSelector } from \"react-redux\";\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from '../components/SearchBox';\nimport { Route } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst UsersScreen = ({ match, history }) => {\n    const [users, setUsers] = useState([]);\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const keyword = match.params.keyword\n\n    useEffect(() => {\n        if (userInfo) {\n            const config = {\n                headers: {\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            const fetchUsers = async (keyword = '') => {\n                const { data } = await axios.get(`/api/users/users?keyword=${keyword}`, config);\n                setUsers(data);\n                console.log(data);\n            }\n\n            fetchUsers(keyword);\n        } else {\n            history.push('/login');\n        }\n    }, [keyword, history, userInfo])\n\n    return (\n        <Container>\n            <Row>\n                <Route render={({ history }) => <SearchBox history={history} />} />\n            </Row>\n            <Row style={{ display: 'flex', juctifyContent: 'center', alignItems: 'center', flexWrap: 'wrap' }}>\n                {\n                    users.map((user) => (\n                        userInfo && user._id === userInfo._id ? ((<>\n                        </>)) :\n                            (\n                                <Col>\n                                    <LinkContainer to={`users/${user._id}`} key={user._id} style={{ width: '30vh', margin: '2vh' }}>\n                                        <Card>\n                                            <Card.Body>\n                                                <Card.Title style={{ marginBottom: \"3vh\" }}><FontAwesomeIcon className=\"mx-2\" icon={faUser}></FontAwesomeIcon><strong>{user.username}</strong></Card.Title>\n                                                <Card.Text>{user.knownAs.charAt(0).toUpperCase() + user.knownAs.slice(1) + \", \" + user.gender}</Card.Text>\n                                                <Card.Text>{user.city + \", \" + user.country}</Card.Text>\n                                                <Card.Text style={{ marginTop: \"3vh\" }}>Native Language: <strong>{user.nativeLanguage}</strong></Card.Text>\n                                                <Card.Text>Learning: <strong>{user.isLearning}</strong></Card.Text>\n                                                <Card.Text>{user.introduction}</Card.Text>\n                                                <Button style={{ marginTop: \"2vh\" }}>Go to profile</Button>\n                                            </Card.Body>\n                                        </Card>\n                                    </LinkContainer>\n                                </Col>\n                            )\n                    ))\n                }\n            </Row>\n        </Container >\n    )\n}\n\nexport default UsersScreen\n","import { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({children}) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <Spinner animation='border' role='status' style={{ width: '100px', height: '100px', margin: 'auto', display: 'block' }}>\n            <span className='sr-only'></span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import { Alert } from \"react-bootstrap\"\n\nconst Message = ({variant, children}) => {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nMessage.defaultProps = {\n    variant: 'info',\n}\n\nexport default Message\n","import { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from '../actions/userActions';\nimport FormContainer from \"../components/FormContainer\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nconst LoginScreen = ({ location, history }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector(state => state.userLogin);\n\n    const { userInfo, loading, error } = userLogin;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(username, password));\n    }\n\n    return (\n        <FormContainer>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader/>}\n            <Form onSubmit={submitHandler} style={{ marginTop: \"3vh\", marginBottom: \"3vh\" }}>\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"\" placeholder=\"Enter your username\"\n                        value={username} onChange={(e) => setUsername(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter your password\"\n                        value={password} onChange={(e) => setPassword(e.target.value)} style={{ marginBottom: \"3vh\" }}></Form.Control>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">Sign in</Button>\n                <Button variant=\"secondary\" type=\"submit\" onClick={(e) => {setUsername(\"demo\"); setPassword(\"demodemo\")}}>Sign in as Demo User</Button>\n            </Form>\n\n            <Row className=\"py-3\">\n                <Col>\n                    Don't have an account yet?\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}> Register</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register } from '../actions/userActions';\nimport FormContainer from \"../components/FormContainer\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport axios from \"axios\";\n\nconst RegisterScreen = ({ location, history }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState(null);\n    const [knownAs, setKnownAs] = useState('');\n    const [languages, setLanguage] = useState([]);\n    const [dateOfBirth, setDateOfBirth] = useState('');\n    const [gender, setGender] = useState('');\n    const [countries, setCountry] = useState([]);\n    const [cities, setCity] = useState([]);\n    const [introduction, setIntroduction] = useState('');\n\n    const [selectedNativeLanguage, setSelectedNativeLanguage] = useState('');\n    const [selectedIsLearning, setSelectedIsLearning] = useState([]);\n    const [selectedCountry, setSelectedCountry] = useState('');\n    const [selectedCity, setSelectedCity] = useState('');\n    const [age, setAge] = useState('');\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector(state => state.userRegister);\n\n    const { userInfo, loading, error } = userRegister;\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n        const fetchLanguages = async () => {\n            const { data } = await axios.get('/api/languages');\n            setLanguage(data)\n        };\n        fetchLanguages();\n        const fetchCountries = async () => {\n            const { data } = await axios.get('/api/countries');\n            setCountry(data)\n        };\n        fetchCountries();\n\n    }, [history, userInfo, redirect])\n\n    const calculateAge = async (dateOfBirth) => {\n        var Bdate = dateOfBirth;\n        var Bday = +new Date(Bdate);\n        var calculatedAge = ((Date.now() - Bday) / (31557600000));\n        setAge(calculatedAge)\n        console.log(age);\n        console.log(calculatedAge);\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        calculateAge(dateOfBirth);\n        if (password !== confirmPassword) {\n            setMessage('Passwords don\\'t match');\n        }\n        else if (!selectedNativeLanguage) {\n            setMessage('Select your native language please!');\n        }\n        else if (!selectedIsLearning) {\n            setMessage('Select a language you are learning please!');\n        }\n        else if (selectedNativeLanguage === selectedIsLearning) {\n            setMessage('Native language and the language you are learning can\\'t be similar');\n        }\n        else if (!dateOfBirth) {\n            setMessage('Choose your date of birth please!')\n        }\n        else if (age < 13) {\n            setMessage('You must be older than 13');\n        }\n        else if (!gender) {\n            setMessage('Select your gender please!');\n        }\n        else if (!selectedCountry) {\n            setMessage('Select your country please!');\n        }\n        else if (!selectedCity) {\n            setMessage('Select your city please!');\n        }\n        else if (!introduction) {\n            setMessage('Enter your introduction please!');\n        } else {\n            dispatch(register(username, password, knownAs, selectedNativeLanguage, selectedIsLearning, dateOfBirth, gender, selectedCountry, selectedCity, introduction));\n        }\n    }\n\n    return (\n        <FormContainer>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler} style={{ margin: \"5vh\" }}>\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"\" placeholder=\"Enter your username\"\n                        value={username} onChange={(e) => setUsername(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter your password\"\n                        value={password} onChange={(e) => setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"confirmPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Confirm your password\"\n                        value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"knownAs\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type=\"\" placeholder=\"Enter your name\"\n                        value={knownAs} onChange={(e) => setKnownAs(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"nativeLanguage\">\n                    <Form.Label>Native Language</Form.Label>\n                    <Form.Control as=\"select\" type=\"\" value={selectedNativeLanguage}\n                        onChange={(e) => setSelectedNativeLanguage(e.target.value)}>\n                        {\n                            languages.map((language) => (\n                                <option value={language.languageName} key={language._id}>\n                                    {language.languageName}\n                                </option>\n                            ))\n                        }\n                        <option value=\"\" selected disabled hidden>Select a language</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"isLearning\">\n                    <Form.Label>Language you want to learn</Form.Label>\n                    <Form.Control as=\"select\" type=\"\" value={selectedIsLearning}\n                        onChange={(e) => setSelectedIsLearning(e.target.value)}>\n                        {\n                            languages.map((language) => (\n                                <option value={language.languageName} key={language._id}>\n                                    {language.languageName}\n                                </option>\n                            ))\n                        }\n                        <option value=\"\" selected disabled hidden>Select a language</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"dateOfBirth\">\n                    <Form.Label>Date of birth</Form.Label>\n                    <Form.Control type=\"date\" value={dateOfBirth} onChange={(e) => setDateOfBirth(e.target.value)} />\n                </Form.Group>\n                <Form.Group controlId=\"gender\">\n                    <Form.Label>Gender</Form.Label>\n                    <Form.Control as=\"select\" type=\"\" value={gender} onChange={(e) => setGender(e.target.value)}>\n                        <option value=\"\" selected disabled hidden>Select your gender</option>\n                        <option value=\"Male\">Male</option>\n                        <option value=\"Female\">Female</option>\n                        <option value=\"Uknown\">Unknown</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"country\">\n                    <Form.Label>Country you are in</Form.Label>\n                    <Form.Control as=\"select\" type=\"\" value={selectedCountry}\n                        onChange={(e) => {\n                            setSelectedCountry(e.target.value);\n                            const fetchCities = async (selectedCountry) => {\n                                const { data } = await axios.get(`/api/cities/${selectedCountry}`);\n                                setCity(data)\n                            };\n                            fetchCities(e.target.value);\n                        }}>\n                        {\n                            countries.map((country, _id) => (\n                                <option value={country.countryName} key={country._id}>\n                                    {country.countryName}\n                                </option>\n                            ))\n                        }\n                        <option value=\"\" selected disabled hidden>Select a country</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"city\">\n                    <Form.Label>City you are in</Form.Label>\n                    <Form.Control as=\"select\" type=\"\" value={selectedCity}\n                        onChange={(e) => setSelectedCity(e.target.value)}>\n                        {\n                            cities.map((city, _id) => (\n                                <option value={city.cityName} key={city._id}>\n                                    {city.cityName}\n                                </option>\n                            ))\n                        }\n                        <option value=\"\" selected disabled hidden>Select a city</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"introduction\">\n                    <Form.Label>Introduction</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        style={{ height: '100px' }}\n                        value={introduction} onChange={(e) => setIntroduction(e.target.value)}\n                    />\n                </Form.Group>\n                <Button style={{marginTop: \"3vh\"}} variant=\"primary\" type=\"submit\">Register</Button>\n            </Form>\n\n            <Row className=\"py-3\">\n                <Col>\n                    Already have an account?<Link to={redirect ? `/login?redirect=${redirect}` : '/login'}> Login</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen","import React from 'react'\nimport { getUserDetails, updateUserProfile, deleteUserAccount } from '../actions/userActions'\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nconst UserScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState(null);\n\n    const userDetails = useSelector(state => state.userDetails);\n    const { loading, error, user } = userDetails;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n    const { success } = userUpdateProfile;\n\n    const userDeleteProfile = useSelector(state => state.userDeleteProfile);\n    const { success: successDelete } = userDeleteProfile;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user.username) {\n                dispatch(getUserDetails('profile'))\n            } else {\n                setUsername(user.username)\n            }\n        }\n    }, [dispatch, history, userInfo, user, successDelete])\n\n    const deleteHandler = (e, id) => {\n        if (window.confirm('Are you sure you want to delete your account?')) {\n            dispatch(deleteUserAccount(userInfo._id));\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setMessage('Passwords don\\'t match');\n        } else {\n            dispatch(updateUserProfile({ id: user._id, username, password }));\n        }\n    }\n\n    return (\n        <FormContainer>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {success && <Message variant='success'>Profile successfully updated!</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler} style={{ marginTop: \"3vh\" }}>\n                <Form.Group controlId=\"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"\" placeholder=\"Enter your username\"\n                        value={username} onChange={(e) => setUsername(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter your password\"\n                        value={password} onChange={(e) => setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"confirmPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Confirm your password\"\n                        value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Col style={{ marginTop: \"3vh\", display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\", flexWrap: \"norap\" }}>\n                    <Button variant=\"primary\" type=\"submit\">Update profile</Button>\n                    <Button onClick={deleteHandler} variant=\"danger\" type=\"submit\">Delete account</Button>\n                </Col>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default UserScreen\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Card, Button } from 'react-bootstrap';\nimport { useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faPaperPlane } from '@fortawesome/free-solid-svg-icons';\n\nconst UserProfileScreen = ({ match, history }) => {\n    const [user, setUser] = useState({});\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const [conversations, setConversations] = useState([]);\n\n    const [age, setAge] = useState('');\n\n    const calculateAge = async (dateOfBirth) => {           \n        var Bdate = dateOfBirth;\n        var Bday = +new Date(Bdate);\n        var calculatedAge = ((Date.now() - Bday) / (31557600000));\n        setAge(calculatedAge)\n    }\n\n    useEffect(() => {\n        if (userInfo) {\n            const config = {\n                headers: {\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            const fetchConversations = async (id) => {\n                const { data } = await axios.get(`/api/conversations/${id}`, config)\n                setConversations(data)\n            }\n            fetchConversations(userInfo._id);\n        } else {\n            history.push('/login');\n        }\n\n    }, [history, userInfo])\n\n    useEffect(() => {\n        if (userInfo) {\n            if (match.params.id !== 'profile') {\n                const fetchUser = async () => {\n                    const res = await axios.get(`/api/users/users/${match.params.id}`);\n                    setUser(res.data);\n                    calculateAge(res.data.dateOfBirth);\n                }\n                fetchUser();\n            } else {\n                const fetchUser = async () => {\n                    const res = await axios.get(`/api/users/users/${userInfo._id}`);\n                    setUser(res.data);\n                }\n                fetchUser();\n                calculateAge(userInfo.dateOfBirth);\n            }\n        } else {\n            history.push('/login');\n        }\n    }, [history, userInfo])\n\n    const submitHandler = async (e) => {\n        if (userInfo) {\n            const config = {\n                headers: {\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            let flag = true\n            if (conversations.length !== 0) {\n                conversations.map(conv => {\n                    console.log(conversations);\n                    console.log(conv);\n                    const friend = conv.participants.find((m) => m !== userInfo._id)\n                    console.log(friend);\n                    console.log(match.params.id);\n                    if (match.params.id === friend) {\n                        flag = false\n                    }\n                })\n            } else {\n                flag = true\n            }\n            console.log(flag);\n            \n            if (flag === true) {\n                const conversation = {\n                    sender: userInfo._id,\n                    reciever: user._id\n                }\n                const res = await axios.post('/api/conversations', conversation, config)\n                setConversations([...conversations, res.data])\n            }\n        } else {\n            history.push('/login');\n        }\n    }\n\n    return (\n        <Container>\n            <Row style={{ display: 'flex', juctifyContent: 'center', alignItems: 'center', flexWrap: 'wrap' }}>\n                {\n                    userInfo && userInfo._id !== user._id ?\n                        ( <Row>\n                            <Card style={{ display: 'flex', juctifyContent: 'left', alignItems: 'center', padding: \"10vh\" }}>\n                                <Card.Title style={{marginBottom: \"5vh\"}}><FontAwesomeIcon className=\"mx-2\" icon={faUser}></FontAwesomeIcon><strong>{user.username}</strong></Card.Title>\n                                <Card.Text>{user.knownAs + \", \"  + Math.floor(age) + \", \" + user.gender}</Card.Text>\n                                <Card.Text>{user.city + \", \" + user.country}</Card.Text>\n                                <Card.Text style={{margin: \"2vh\"}}>Native Language: <strong>{user.nativeLanguage}</strong></Card.Text>\n                                <Card.Text>Learning: <strong>{user.isLearning}</strong></Card.Text>\n                                <Card.Text>{user.introduction}</Card.Text>\n                                <LinkContainer to=\"/messages\" style={{ width: '30%', marginTop: \"2vh\" }}><Button onClick={submitHandler} type=\"submit\" variant=\"primary\"><FontAwesomeIcon className=\"mx-2\" icon={faPaperPlane}></FontAwesomeIcon>Send a message</Button></LinkContainer>\n                            </Card>\n                        </Row>) :\n                        (<Row>\n                            <Card style={{ display: 'flex', juctifyContent: 'left', alignItems: 'center', padding: \"10vh\" }}>\n                                <Card.Title style={{marginBottom: \"5vh\"}}><FontAwesomeIcon className=\"mx-2\" icon={faUser}></FontAwesomeIcon><strong>{userInfo.username}</strong></Card.Title>\n                                <Card.Text>{userInfo.knownAs + \", \" + Math.floor(age) + \", \" + userInfo.gender}</Card.Text>\n                                <Card.Text>{userInfo.city + \", \" + userInfo.country}</Card.Text>\n                                <Card.Text style={{margin: \"2vh\"}}>Native Language: <strong>{userInfo.nativeLanguage}</strong></Card.Text>\n                                <Card.Text>Learning: <strong>{userInfo.isLearning}</strong></Card.Text>\n                                <Card.Text style={{marginTop: \"2vh\"}}>{userInfo.introduction}</Card.Text>\n                            </Card>\n                        </Row>)\n                }\n            </Row>\n        </Container>\n    )\n}\n\nexport default UserProfileScreen\n","import React, { useEffect } from 'react';\nimport { Container, Row, Card, Button, Col } from 'react-bootstrap';\nimport { adminUsersList, adminUsersDelete } from '../actions/adminActions';\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nconst AdminUsersScreen = ({ history }) => {\n    const dispatch = useDispatch();\n\n    const adminUserList = useSelector(state => state.adminUserList);\n    const { loading, error, users } = adminUserList;\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const adminUserDelete = useSelector(state => state.adminUserDelete);\n    const { success: successDelete } = adminUserDelete;\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(adminUsersList());\n        } else {\n            history.push('/login');\n        }\n    }, [dispatch, history, successDelete, userInfo])\n\n    const deleteHandler = (id) => {\n        if (window.confirm('Are you sure you want to delete this account?')) {\n            dispatch(adminUsersDelete(id));\n        }\n    }\n\n    return (\n        <>\n            {loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                <Container>\n                    <Row style={{ display: 'flex', juctifyContent: 'center', alignItems: 'center', flexWrap: 'wrap', marginTop: \"5vh\" }}>\n                        {\n                            users.map((user) => (\n                                userInfo && user._id === userInfo._id ? ((<>\n                                </>)) :\n                                    (\n                                        <Col>\n                                            <LinkContainer to={`users/${user._id}`} key={user._id} style={{ width: '30vh', margin: '2vh' }}>\n                                                <Card>\n                                                    <Card.Body>\n                                                        <Card.Title style={{ marginBottom: \"3vh\" }}><FontAwesomeIcon className=\"mx-2\" icon={faUser}></FontAwesomeIcon><strong>{user.username}</strong></Card.Title>\n                                                        <Card.Text>{user.knownAs.charAt(0).toUpperCase() + user.knownAs.slice(1) + \", \" + user.gender}</Card.Text>\n                                                        <Card.Text>{user.city + \", \" + user.country}</Card.Text>\n                                                        <Card.Text style={{ marginTop: \"3vh\" }}>Native Language: <strong>{user.nativeLanguage}</strong></Card.Text>\n                                                        <Card.Text>Learning: <strong>{user.isLearning}</strong></Card.Text>\n                                                        <Card.Text>{user.introduction}</Card.Text>\n                                                        <Button variant=\"danger\" style={{ marginTop: \"2vh\" }} onClick={() => deleteHandler(user._id)}>Delete account</Button>\n                                                    </Card.Body>\n                                                </Card>\n                                            </LinkContainer>\n                                        </Col>\n                                    )\n                            ))\n                        }\n                    </Row>\n                </Container>\n            )}\n        </>\n    )\n}\n\nexport default AdminUsersScreen","import axios from \"axios\";\nimport { \n    ADMIN_USER_DELETE_FAIL,\n    ADMIN_USER_DELETE_REQUEST,\n    ADMIN_USER_DELETE_SUCCESS,\n    ADMIN_USER_LIST_FAIL,\n    ADMIN_USER_LIST_REQUEST, \n    ADMIN_USER_LIST_SUCCESS,\n} from \"../constants/adminConstants\"\n\nexport const adminUsersList = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ADMIN_USER_LIST_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/admin/users`, config);\n\n        dispatch({\n            type: ADMIN_USER_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: ADMIN_USER_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const adminUsersDelete = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ADMIN_USER_DELETE_REQUEST\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.delete(`/api/admin/users/${id}`, config);\n\n        dispatch({\n            type: ADMIN_USER_DELETE_SUCCESS,\n        })\n    } catch (error) {\n        dispatch({\n            type: ADMIN_USER_DELETE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { Card, Container, Form, Button, Row } from 'react-bootstrap'\nimport { useSelector } from \"react-redux\";\nimport axios from 'axios'\n\nconst BlogSectionScreen = ({ match }) => {\n    const [posts, setPosts] = useState([]);\n\n    const [title, setTitle] = useState('');\n\n    const [contents, setContents] = useState('');\n\n    const [sectionId, setSectionId] = useState('');\n\n    const userLogin = useSelector(state => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const config = {\n        headers: {\n            Authorization: `Bearer ${userInfo.token}`\n        }\n    }\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            const { data } = await axios.get(`/api/blogs/${match.params.id}`);\n            setPosts(data);\n            setSectionId(match.params.id)\n        }\n        fetchPosts();\n\n    }, [])\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n        const post = {\n            title: title,\n            contents: contents,\n            userId: userInfo._id,\n            sectionId: sectionId\n        }\n\n        const res = await axios.post(`/api/blogs/${sectionId}`, post, config)\n        setPosts([...posts])\n        window.location.reload()\n    }\n\n    return (\n        <Container style={{ dispay: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"150vh\" }}>\n            <Row>\n                <h1 style={{ marginTop: \"3vh\", marginBottom: \"3vh\" }}>{userInfo.isLearning}</h1>\n                <Form onSubmit={submitHandler}>\n                    <Form.Control style={{ marginBottom: \"2vh\" }} type=\"\" placeholder=\"Title\" value={title} onChange={(e) => setTitle(e.target.value)}></Form.Control>\n                    <Form.Control onChange={(e) => setContents(e.target.value)} value={contents} as=\"textarea\" style={{ height: '100px' }} placeholder=\"Write a new post\" />\n                    <Button type=\"submit\" className=\"my-4\" variant=\"primary\">Publish</Button>\n                </Form>\n                <Card.Body>\n                    {\n                        posts.map((post) => (\n                            <Card key={post._id} style={{ marginTop: \"3vh\", width: \"100%\" }}>\n                                <Card.Body>\n                                    <Card.Header style={{marginBottom: \"2vh\"}}>{post.title}</Card.Header>\n                                    <Card.Text>{post.contents}</Card.Text>\n                                </Card.Body>\n                            </Card>\n                        ))\n                    }\n                </Card.Body>\n            </Row>\n        </Container>\n    )\n}\n\nexport default BlogSectionScreen\n","import './App.css';\nimport Header from './components/Header';\nimport './bootstrap.min (5).css';\nimport MessageScreen from './screens/MessageScreen';\nimport UsersScreen from './screens/UsersScreen';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport UserScreen from './screens/UserScreen';\nimport UserProfileScreen from './screens/UserProfileScreen';\nimport AdminUsersScreen from './screens/AdminUsersScreen';\nimport BlogSectionScreen from './screens/BlogSectionScreen';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Route path='/messages' component={MessageScreen} exact />\n      <Route path='/blogs/:id' component={BlogSectionScreen} />\n      <Route path='/' component={UsersScreen} exact />\n      <Route path=\"/login\" component={LoginScreen} exact ></Route>\n      <Route path=\"/register\" component={RegisterScreen} exact ></Route>\n      <Route path=\"/profile\" component={UserProfileScreen} exact></Route>\n      <Route path=\"/profile/edit\" component={UserScreen} exact></Route>\n      <Route path=\"/admin/users\" component={AdminUsersScreen} exact></Route>\n      <Route path=\"/users/:id\" component={UserProfileScreen}/>\n      <Route path=\"/search/:keyword\" component={UsersScreen}/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userDeleteProfileReducer } from './reducers/userReducers' \nimport { adminUsersListReducer, adminUsersDeleteReducer } from './reducers/adminReducers';\n\nconst reducer = combineReducers({\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userDeleteProfile: userDeleteProfileReducer,\n    adminUserList: adminUsersListReducer,\n    adminUserDelete: adminUsersDeleteReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n\nconst initialState = {\n    userLogin: { userInfo: userInfoFromStorage }\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import { \n    USER_LOGIN_FAIL, \n    USER_LOGIN_REQUEST, \n    USER_LOGIN_SUCCESS, \n    USER_LOGOUT, \n    USER_REGISTER_REQUEST, \n    USER_REGISTER_SUCCESS, \n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_DELETE_PROFILE_REQUEST,\n    USER_DELETE_PROFILE_SUCCESS,\n    USER_DELETE_PROFILE_FAIL,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n        case USER_LOGOUT:\n            return {}\n        default:\n            return state;\n    }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}\n\nexport const userUpdateProfileReducer = (state = { }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}\n\nexport const userDeleteProfileReducer = (state = { }, action) => {\n    switch (action.type) {\n        case USER_DELETE_PROFILE_REQUEST:\n            return { loading: true }\n        case USER_DELETE_PROFILE_SUCCESS:\n            return { loading: false, success: true }\n        case USER_DELETE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}\n","import { \n    ADMIN_USER_LIST_FAIL,\n    ADMIN_USER_LIST_REQUEST, \n    ADMIN_USER_LIST_SUCCESS,\n    ADMIN_USER_LIST_RESET,\n    ADMIN_USER_DELETE_REQUEST,\n    ADMIN_USER_DELETE_SUCCESS,\n    ADMIN_USER_DELETE_FAIL\n} from \"../constants/adminConstants\";\n\nexport const adminUsersListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case ADMIN_USER_LIST_REQUEST:\n            return { loading: true }\n        case ADMIN_USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n        case ADMIN_USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n        case ADMIN_USER_LIST_RESET:\n            return { users: [] }\n        default:\n            return state;\n    }\n}\n\nexport const adminUsersDeleteReducer = (state = { }, action) => {\n    switch (action.type) {\n        case ADMIN_USER_DELETE_REQUEST:\n            return { loading: true }\n        case ADMIN_USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n        case ADMIN_USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}